{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetails.js","NotFound.js","App.js","index.js"],"names":["Navbar","className","to","BlogList","blogs","title","map","blog","id","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","NotFound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7375c31c.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <h1>Something here nav</h1>\r\n            <div className=\"links\">\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/create\">New stuff</Link>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import { Link } from \"react-router-dom\";\r\n\r\nconst BlogList = ({ blogs, title }) => {\r\n  return (\r\n    <div className=\"blog-list\">\r\n      <h2>{ title }</h2>\r\n      {blogs.map((blog) => (\r\n        <div className=\"blog-preview\" key={blog.id}>\r\n          <Link to={`/blogs/${blog.id}`}>\r\n            <h2>{ blog.title }</h2>\r\n            <p>Written by { blog.author }</p>\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlogList;","import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const abortCont = new AbortController();\r\n\r\n    setTimeout(() => {\r\n      fetch(url, { signal: abortCont.signal })\r\n        .then(res => {\r\n          if (!res.ok) {\r\n            throw Error('could not fetch the data for that resource douche');\r\n          }\r\n          return res.json();\r\n        })\r\n        .then(data => {\r\n          setData(data);\r\n          setIsPending(false);\r\n          setError(null);\r\n        })\r\n        .catch(err => {\r\n          if (err.name === 'AbortError') {\r\n            console.log('fetch aborted')\r\n          } else {\r\n            setIsPending(false);\r\n            setError(err.message);\r\n          }\r\n        })\r\n    }, 1000);\r\n\r\n    return () => abortCont.abort();\r\n  }, [url]);\r\n\r\n  return { data, isPending, error }\r\n}\r\n\r\nexport default useFetch;","import BlogList from \"./BlogList\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst Home = () => {\r\n  const { data: blogs, isPending, error } = useFetch('http://localhost:8000/blogs');\r\n  \r\n  return (\r\n    <div className=\"home\">\r\n      { error && <div>{ error }</div> }\r\n      { isPending && <div>Loading...</div> }\r\n      {blogs && <BlogList blogs={blogs} title=\"All the stuff!\" />}\r\n    </div> \r\n  );\r\n}\r\n\r\nexport default Home;","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Create = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [author, setAuthor] = useState('mario');\r\n  const [isPending, setIsPending] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const blog = { title, body, author };\r\n\r\n    setIsPending(true);\r\n\r\n    fetch('http://localhost:8000/blogs', {\r\n      method: 'POST',\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(blog)\r\n    }).then(() => {\r\n      console.log('new blog added');\r\n      setIsPending(false);\r\n      history.push('/');\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <div className=\"create\">\r\n      <h2>This is another stuff</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Blog title:</label>\r\n        <input \r\n          type=\"text\"\r\n          required\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <label>Blog body:</label>\r\n        <textarea\r\n          required\r\n          value={body}\r\n          onChange={(e) => setBody(e.target.value)}\r\n        ></textarea>\r\n        <label>Blog author:</label>\r\n        <select\r\n          value={author}\r\n          onChange={(e) => setAuthor(e.target.value)}\r\n        >\r\n          <option value=\"mario\">mario</option>\r\n          <option value=\"yoshi\">yoshi</option>\r\n        </select>\r\n        { !isPending && <button>Add Blog</button>}\r\n        { isPending && <button disabled>Adding blog...</button>}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Create;","import { useHistory, useParams } from \"react-router-dom\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst BlogDetails = () => {\r\n  const { id } = useParams();\r\n  const { data: blog, error, isPending } = useFetch('http://localhost:8000/blogs/' + id);\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    fetch('http://localhost:8000/blogs/' + blog.id, {\r\n      method: 'DELETE'\r\n    }).then(() => {\r\n      history.push('/');\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"blog-details\">\r\n      { isPending && <div>Loading...</div>}\r\n      { error && <div>{ error }</div>}\r\n      { blog && (\r\n        <article>\r\n          <h2>{ blog.title }</h2>\r\n          <p>Written by { blog.author }</p>\r\n          <div>{ blog.body }</div>\r\n          <button onClick={handleClick}>delete</button>\r\n        </article>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BlogDetails;","import { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"not-found\">\r\n      <h2>Whoops</h2>\r\n      <p>That page can't be found</p>\r\n      <Link to=\"/\">Back to the beginning...</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;","import Navbar from './Navbar';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\n\nfunction App() {\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n            <Route path=\"/blogs/:id\">\n              <BlogDetails />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}